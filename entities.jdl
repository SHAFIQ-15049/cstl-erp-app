
entity Company (mst_company){
   name String required,
   shortName String,
   nameInBangla String,
   description TextBlob
}

entity Department (mst_department) {
	name String required,
    shortName String,
    nameInBangla String,
    description TextBlob
}

entity Designation (mst_designation){
    category EmployeeCategory,
	name String required,
	shortName String,
	nameInBangla String,
    description TextBlob
}

entity Grade (mst_grade){
    category EmployeeCategory,
	name String required,
    description TextBlob
}

entity Division (mst_division){
    name String required,
}

entity District (mst_district){
    name String required,
}

entity Thana (mst_thana){
    name String required,
}


entity Employee (mst_employee){
    name String required,
    empId String required,
    globalId String required,
    // company
    localId String required,
    //department
    //grade
    //designation
    category EmployeeCategory,
    type EmployeeType,
    joiningDate LocalDate,
    status EmployeeStatus,
    terminationDate LocalDate,
    terminationReason TextBlob
}

entity PersonalInfo {
    name String required,
    banglaName String required,
    photo Blob,
    fatherName String required,
    motherName String required,
    maritalStatus MaritalStatus,
    spouseName String,
    dateOfBirth LocalDate,
    nationalId String,
    birthRegistration String,
    height Double,
    gender GenderType,
    bloodGroup BloodGroupType,
    emergencyContact String,
}

entity Address (address){
    //division
    //district
    //thana
    presentThanaTxt String,
    presentStreet String,
    presentArea String,
    presentPostCode Integer,
    permanentThanaTxt String,
    permanentStreet String,
    permanentArea String,
    permanentPostCode Integer,
    isSame Boolean
}

entity EducationalInfo (educational_info){
    serial Integer required,
    degree String required,
    institution String required,
    passingYear Integer required,
    courseDuration Integer,
    attachment Blob
}

entity Training (training){
    serial Integer required,
    name String required,
    trainingInstitute String required,
    receivedOn LocalDate
}

entity EmployeeAccount (emp_account){
    accountType AccountType required,
    accountNo String required,
    isSalaryAccount Boolean
}

entity JobHistory (job_history){
    serial Integer required,
    organization String required,
    from LocalDate,
    to LocalDate,
    total Integer
}

entity ServiceHistory (service_history){
    //department
    //designation
    //grade
    employeeType EmployeeType,
    from LocalDate,
    to LocalDate
}

enum AccountType{
    BANK,
    BKASH,
    ROCKET,
    NAGAD,
    OTHERS
}

enum EmployeeType{
    PERMANENT,
    TEMPORARY,
    PART_TIME,
    CONTRACTUAL
}

enum EmployeeCategory{
    MANAGERIAL,
    STAFF,
    WORKER
}

enum MaritalStatus{
    SINGLE,
    MARRIED
}

enum GenderType{
    MALE,
    FEMALE,
    OTHERS
}

enum EmployeeStatus{
    ACTIVE,
    TERMINATED
}

enum AddressType{
    PRESENT,
    PERMANENT
}

enum BloodGroupType{
   A_POSITIVE,
   A_NEGATIVE,
   B_POSITIVE,
   B_NEGATIVE,
   O_POSITIVE,
   O_NEGATIVE,
   AB_POSITIVE,
   AB_NEGATIVE
}

relationship ManyToOne{
    Employee{company(name)} to Company,
    Employee{department(name)} to Department,
    Employee{grade(name)} to Grade,
    Employee{designation(name)} to Designation,
    District{division(name)} to Division,
    Thana{district(name)} to District,
    Address{presentDivision(name)} to Division,
    Address{presentDistrict(name)} to District,
    Address{presentThana(name)} to Thana,
    Address{permanentDivision(name)} to Division,
    Address{permanentDistrict(name)} to District,
    Address{permanentThana(name)} to Thana,
    ServiceHistory{department(name)} to Department,
    ServiceHistory{designation(name)} to Designation,
    ServiceHistory{grade(name)} to Grade
}

relationship OneToMany{
    Employee{educationalInfo} to EducationalInfo{employee(name)},
    Employee{training} to Training{employee(name)},
    Employee{employeeAccount} to EmployeeAccount{employee(name)},
    Employee{jobHistory} to JobHistory{employee(name)},
    Employee{serviceHistory} to ServiceHistory{employee(name)},
}


relationship OneToOne{
    Employee{address} to Address{employee(name)},
    Employee{personalInfo(name)} to PersonalInfo{employee(name)},
}

service Company, Department, Designation, Grade, Employee, PersonalInfo, Division, District, Thana, Address, EducationalInfo, Training, EmployeeAccount, JobHistory, ServiceHistory with serviceClass
filter Company, Department, Designation, Grade, Employee, PersonalInfo, Division, District, Thana, Address, EducationalInfo, Training, EmployeeAccount, JobHistory, ServiceHistory
paginate Company, Department, Designation, Grade, Employee, PersonalInfo, Division, District, Thana, Address, EducationalInfo, Training, EmployeeAccount,JobHistory, ServiceHistory with pagination
